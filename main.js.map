{"version":3,"sources":["./libs/swap/forms/src/lib/directives/utilities/cursor.ts","./libs/swap/forms/src/lib/directives/mask.directive.ts","./apps/app/src/app/shared/index.ts","./apps/app/src/app/containers/slider/slider.container.ts","./apps/app/src/app/containers/slider/slider.container.html","./libs/swap/layout/src/lib/directives/nav-focus.directive.ts","./apps/app/src/app/shared/shared.module.ts","./libs/swap/layout/src/lib/components/index.ts","./libs/swap/forms/src/lib/directives/utilities/mask.ts","./apps/app/src/app/containers/radio/radio.container.ts","./apps/app/src/app/containers/radio/radio.container.html","./libs/swap/forms/src/index.ts","./libs/swap/forms/src/lib/components/select/interfaces/index.ts","./libs/swap/layout/src/lib/components/tabs/tabs.container.ts","./libs/swap/layout/src/lib/components/tabs/tabs.container.html","./libs/swap/forms/src/lib/components/selection/index.ts","./libs/swap/forms/src/lib/directives/control.directive.ts","./libs/swap/forms/src/lib/directives/index.ts","./apps/app/src/app/containers/checkbox/index.ts","./libs/swap/layout/src/lib/directives/index.ts","./apps/app/src/app/containers/index.ts","./libs/swap/forms/src/lib/components/slider/slider.component.ts","./libs/swap/forms/src/lib/components/template.html","./libs/swap/forms/src/lib/components/button/index.ts","./libs/swap/forms/src/lib/components/select/option.component.ts","./apps/app/src/app/containers/slider/index.ts","./libs/swap/forms/src/lib/components/textfield/index.ts","./libs/swap/forms/src/lib/components/select/index.ts","./libs/swap/layout/src/lib/swap-layout.module.ts","./apps/app/src/app/components/index.ts","./libs/swap/forms/src/lib/components/select/select-panel.component.ts","./apps/app/src/app/containers/textfield/index.ts","./libs/swap/forms/src/lib/components/select/select.component.ts","./libs/swap/forms/src/lib/components/select/select.component.html","./libs/swap/forms/src/lib/components/selection/checkbox.component.ts","./libs/swap/forms/src/lib/components/select/select.service.ts","./libs/swap/layout/src/lib/components/tabs/index.ts","./apps/app/src/environments/environment.ts","./libs/swap/layout/src/index.ts","./apps/app/src/app/app.module.ts","./libs/swap/forms/src/lib/directives/utilities/mask-validation.ts","./apps/app/src/app/shared/navigation/navigation.ts","./apps/app/src/app/components/form-footer/form-footer.component.ts","./apps/app/src/app/components/form-footer/form-footer.component.html","./apps/app/src/app/shared/navigation/navigation.service.ts","./libs/swap/layout/src/lib/components/tabs/tab.component.ts","./libs/swap/forms/src/lib/swap-forms.module.ts","./apps/app/src/app/components/header-nav/index.ts","./apps/app/src/app/containers/select/index.ts","./apps/app/src/app/containers/checkbox/checkbox.container.ts","./apps/app/src/app/containers/checkbox/checkbox.container.html","./apps/app/src/app/containers/textfield/textfield.container.ts","./apps/app/src/app/containers/textfield/textfield.container.html","./apps/app/src/main.ts","./apps/app/src/app/containers/select/select.container.ts","./apps/app/src/app/containers/select/select.container.html","./apps/app/src/app/components/form-footer/index.ts","./libs/swap/forms/src/lib/directives/checkbox-group.directive.ts","./apps/app/src/app/app.component.ts","./apps/app/src/app/app.component.html","./libs/swap/forms/src/lib/components/button/button.component.ts","./apps/app/src/app/shared/navigation/index.ts","./libs/swap/forms/src/lib/components/selection/radio.component.ts","./libs/swap/forms/src/lib/components/input-base.ts","./apps/app/src/app/components/header-nav/header-nav.component.ts","./apps/app/src/app/components/header-nav/header-nav.component.html","./libs/swap/forms/src/lib/components/slider/index.ts","./libs/swap/forms/src/lib/components/textfield/textfield.component.ts","./libs/swap/forms/src/lib/components/index.ts","./libs/swap/forms/src/lib/directives/currency-mask.directive.ts","./apps/app/src/app/containers/radio/index.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ElementRef } from '@angular/core';\n\nimport { unmaskedNumericValueFor } from './mask';\n\nexport function cursorPositionFor(el: ElementRef<any> | any): number {\n  return (el.nativeElement || el).selectionStart;\n}\n\n/**\n * Set cursor position at a given `nativeEl` from a `ElementRef` or its wrapper.\n */\nexport function setCursorPositionFor(\n  el: ElementRef<any> | any,\n  nextPos: number\n) {\n  const nativeEl = el.nativeElement || el;\n  nativeEl.selectionStart = nativeEl.selectionEnd = nextPos;\n}\n\n/** Adjusts cursorPosition for input element. Skips non decimal/letter chars.\n * @param addingAtLeft cursor will it keep its position.\n * @param decimalsOnly if should takes into consideration both decimals and letters for determining cursor position */\nexport function nextCursorPositionFor(\n  el: ElementRef<any> | any,\n  previousValue: string,\n  nextValue: string,\n\n  addingAtLeft = false,\n  decimalsOnly = false,\n  removingAtLeft = false\n): number {\n  const initialCursorPosition = cursorPositionFor(el);\n  const maskCheck = decimalsOnly ? /[^\\d]/ : /[^\\w]/;\n\n  const isAdding =\n    removingAtLeft || !addingAtLeft\n      ? nextValue.length > previousValue?.length\n      : nextValue.length >= previousValue?.length;\n\n  let nextCursorPosition = initialCursorPosition;\n\n  if (addingAtLeft && previousValue) {\n    if (isAdding) {\n      nextCursorPosition += nextValue.length - previousValue.length - 1;\n    } else if (previousValue.length > nextValue.length) {\n      nextCursorPosition += nextValue.length - previousValue.length + 1;\n    } else {\n      nextCursorPosition +=\n        unmaskedNumericValueFor(previousValue) >\n        unmaskedNumericValueFor(nextValue)\n          ? 1\n          : 0;\n    }\n  }\n\n  let testPosition = nextCursorPosition - 1;\n  while (maskCheck.test(nextValue[testPosition])) {\n    if (isAdding) {\n      testPosition++;\n      nextCursorPosition++;\n    } else {\n      testPosition--;\n      nextCursorPosition--;\n    }\n\n    if (testPosition < 0) {\n      nextCursorPosition = initialCursorPosition + 1;\n      break;\n    }\n  }\n\n  return nextCursorPosition;\n}\n","import { AbstractControl, NgControl, Validators } from '@angular/forms';\nimport { unmaskedValueFor, matchAndReplaceFor } from './utilities/mask';\nimport { maskFormatValidator } from './utilities/mask-validation';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport {\n  ElementRef,\n  Directive,\n  OnDestroy,\n  Optional,\n  OnInit,\n  Input,\n  Self,\n} from '@angular/core';\nimport {\n  cursorPositionFor,\n  setCursorPositionFor,\n  nextCursorPositionFor,\n} from './utilities/cursor';\n\n@Directive({\n  selector: 'input[swap-mask]',\n})\nexport class MaskDirective implements OnDestroy, OnInit {\n  private _destroy = new Subject();\n\n  /**\n   * Pode ser inferido com `formControlName` ou` [ngControl] `.\n   * O primeiro é necessário se declarado em um wrapper\n   * ao invés de um `<input />` el.\n   */\n  @Input() ngControl!: AbstractControl;\n\n  /**\n   * Formatos de máscara, aceita um único ou vários,\n   * combinando por pedido. por exemplo, \"DDD-WWW.CCC\"\n   *\n   * D: números; C: letras; W: ambos;\n   *\n   * Todos os outros caracteres são tratados como\n   * parte da máscara que acabou de ser exibida.\n   * */\n  @Input('swap-mask')\n  set mask(value: string | string[]) {\n    this._mask = Array.isArray(value)\n      ? [...value].sort((a, b) => a.length - a.length)\n      : value;\n  }\n  get mask() {\n    return this._mask;\n  }\n  _mask!: string | string[];\n\n  /**\n   * Adicione validação para que a entrada corresponda\n   * ao comprimento da máscara, senão retorna o erro de\n   * validação `invalidLength` no` ngControl`.\n   */\n  @Input() validateMaskInput = false;\n\n  /** Defina valores claros para o formControl */\n  @Input() unmasked = false;\n\n  private previousValue!: string;\n  private control!: AbstractControl;\n  private nativeEl: any;\n\n  constructor(\n    @Optional() @Self() private selfNgControl: NgControl,\n    private elRef: ElementRef\n  ) {}\n\n  ngOnInit() {\n    if (!this.mask) {\n      console.warn(\n        'WebrMask: Um valor de Máscara é necessário para que a diretiva seja iniciada.'\n      );\n      return;\n    }\n\n    this.control = this.selfNgControl?.control ?? this.ngControl;\n    if (!this.control) {\n      console.warn(\n        'WebrMask: É necessário um FormControl para que a diretiva seja iniciada.'\n      );\n      return;\n    }\n\n    this.nativeEl = this.elRef.nativeElement.hasChildNodes()\n      ? this.elRef.nativeElement.getElementsByTagName('input')[0]\n      : this.elRef.nativeElement;\n    if (!this.nativeEl) {\n      console.warn(\n        'WebrMask: Um elRef do tipo de entrada é necessário para que a diretiva seja iniciada.'\n      );\n      return;\n    }\n\n    if (this.validateMaskInput) {\n      this.control.setValidators([\n        Validators.required,\n        maskFormatValidator(this.mask),\n      ]);\n    }\n\n    this.control.valueChanges\n      .pipe(startWith(this.control.value), takeUntil(this._destroy))\n      .subscribe((value) => this.setValue(this.maskValueFor(value)));\n  }\n\n  private setValue(nextValue: string) {\n    const nextCursorPosition = nextValue\n      ? nextCursorPositionFor(this.nativeEl, this.previousValue, nextValue)\n      : cursorPositionFor(this.nativeEl);\n\n    this.previousValue = nextValue;\n\n    this.control.setValue(nextValue, { emitEvent: false });\n\n    if (this.unmasked && nextValue) {\n      this.control.setValue(unmaskedValueFor(nextValue), {\n        emitEvent: false,\n        emitModelToViewChange: false,\n      });\n    }\n\n    setCursorPositionFor(this.nativeEl, nextCursorPosition);\n  }\n\n  private maskValueFor(value: string | number): string {\n    if (!value) return '';\n\n    const unmaskedValue = unmaskedValueFor(value);\n\n    const nextMask = !Array.isArray(this.mask)\n      ? this.mask\n      : this.mask.find(\n          (mask) => unmaskedValueFor(mask).length >= unmaskedValue.length\n        ) || this.mask[this.mask.length - 1];\n\n    return matchAndReplaceFor(unmaskedValue, nextMask);\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n    this._destroy.unsubscribe();\n  }\n}\n","export * from './navigation';\nexport * from './shared.module';\n","import { FormControl, FormBuilder } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './slider.container.html',\n})\nexport class SliderContainer {\n  form = this.fb.group({\n    control: new FormControl(59),\n  });\n\n  constructor(readonly fb: FormBuilder) {}\n}\n","<form id=\"swap\" [formGroup]=\"form\">\n  <label swap-slider>\n    <span>Label</span>\n    <input type=\"range\" swap-control formControlName=\"control\" />\n  </label>\n</form>\n\n<footer swap-form=\"swap\"></footer>\n\n<pre>{{ form.value | json }}</pre>\n","import { filter } from 'rxjs/operators';\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Directive({\n  selector: '[swap-nav-focus]',\n})\nexport class NavFocusDirective {\n  private _mainHeader!: HTMLElement;\n  get mainHeader(): HTMLElement {\n    return this._mainHeader;\n  }\n\n  @Input('main-header')\n  set mainHeader(el: HTMLElement) {\n    console.log(el);\n\n    this._mainHeader = el;\n  }\n\n  constructor(readonly router: Router) {\n    console.log(this.mainHeader);\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe(() => {\n        // const mainHeader = document.querySelector('#main-content-header');\n        const mainHeader = this.mainHeader;\n        mainHeader.addEventListener('focus', console.log);\n        console.log(mainHeader);\n        if (mainHeader) {\n          mainHeader.focus();\n        }\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n})\nexport class SharedModule {}\n","export * from './tabs';\n","export function maskedNumericValueFor(\n  value: string | number = '',\n  thousandSeparator = ' ',\n  decimalSeparator = '.',\n  prefix = '',\n  digitsAfterSeparator = 2,\n  maxDigits = 12,\n  allowNegatives = true\n): string {\n  const isNegative = allowNegatives && String(value).match(/-/g)?.length === 1;\n\n  let baseValue = unmaskedNumericValueFor(value, true);\n  baseValue =\n    (baseValue.length >= 1 && String(parseInt(baseValue, 10))) || '000';\n\n  const integerLength = baseValue.length - digitsAfterSeparator;\n  const cents = baseValue\n    .substr((integerLength > 0 && integerLength) || 0)\n    .padStart(digitsAfterSeparator, '0');\n\n  let integerValue = baseValue\n    .substring(\n      0,\n      baseValue.length - digitsAfterSeparator > maxDigits\n        ? maxDigits\n        : baseValue.length - digitsAfterSeparator\n    )\n    .padStart(1, '0');\n\n  if (thousandSeparator)\n    integerValue = integerValue.replace(\n      /\\B(?=(\\d{3})+(?!\\d))/g,\n      thousandSeparator\n    );\n\n  return `${prefix ? `${prefix} ` : ''}${\n    isNegative ? '-' : ''\n  }${integerValue}${decimalSeparator}${cents}`;\n}\n\nexport function unmaskedNumericValueFor(\n  value: string | number,\n  removeNegative = false\n): string {\n  return removeNegative\n    ? String(value).replace(/[^0-9]+/g, '')\n    : String(value).replace(/[^0-9-]+/g, '');\n}\n\nexport function unmaskedValueFor(value: string | number): string {\n  return String(value).replace(/[^\\w]+/g, '');\n}\n\nexport function hasNonDecimalCharacters(value: string | number): boolean {\n  return !/^-?\\d+$/.test(String(value));\n}\n\nexport function matchAndReplaceFor(text: string, pattern: string): string {\n  let patternOffset = 0;\n\n  const testPositionFunc = (\n    prevText: string,\n    cur: string,\n    i: number\n  ): string => {\n    switch (pattern[i + patternOffset]) {\n      case 'D':\n        if (/[\\d]/.test(cur)) return `${prevText}${cur}`;\n        break;\n      case 'C':\n        if (/[\\A-Z, a-z]/.test(cur)) return `${prevText}${cur}`;\n        break;\n      case 'W':\n        if (/[\\w]/.test(cur)) return `${prevText}${cur}`;\n        break;\n      default: {\n        if (/[^\\w]/.test(pattern[i + patternOffset])) {\n          patternOffset++;\n          return testPositionFunc(\n            `${prevText}${pattern[i + patternOffset - 1]}`,\n            cur,\n            i\n          );\n        }\n      }\n    }\n\n    patternOffset--;\n    return `${prevText}`;\n  };\n\n  return text.split('').reduce(testPositionFunc, '');\n}\n","import { FormControl, FormBuilder } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './radio.container.html',\n})\nexport class RadioContainer {\n  form = this.fb.group({\n    control: new FormControl(2),\n  });\n\n  constructor(readonly fb: FormBuilder) {}\n}\n","<form id=\"swap\" [formGroup]=\"form\">\n  <label swap-radio>\n    <span>Label</span>\n    <input\n      type=\"radio\"\n      swap-control\n      formControlName=\"control\"\n      name=\"control\"\n      [value]=\"1\"\n    />\n  </label>\n  <label swap-radio>\n    <span>Label</span>\n    <input\n      type=\"radio\"\n      swap-control\n      formControlName=\"control\"\n      name=\"control\"\n      [value]=\"2\"\n    />\n  </label>\n</form>\n\n<footer swap-form=\"swap\"></footer>\n\n<pre>{{ form.value | json }}</pre>\n","export * from './lib/swap-forms.module';\nexport * from './lib/components';\nexport * from './lib/directives';\n","export * from './option.interface';\nexport * from './select-panel.interface';\nexport * from './select.interface';\n","import {\n  Input,\n  Output,\n  Component,\n  EventEmitter,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { TabComponent } from './tab.component';\n\n@Component({\n  selector: 'swap-tabs',\n  exportAs: 'swapTabs',\n  templateUrl: './tabs.container.html',\n  styleUrls: ['./tabs.container.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabsContainer implements AfterContentInit {\n  _disabled!: boolean;\n\n  get disabled() {\n    return this._disabled;\n  }\n  @Input() set disabled(value: boolean) {\n    this._disabled = value;\n  }\n\n  @Output() currentTabChange = new EventEmitter<TabComponent>();\n\n  ifTabSelected: boolean = false;\n  tabs: TabComponent[] = [];\n\n  addTab(tab: TabComponent) {\n    this.tabs.push(tab);\n  }\n\n  selectTab(tab: TabComponent) {\n    this.tabs.forEach((tab) => (tab.active = false));\n    this.currentTabChange.emit(tab);\n    tab.active = true;\n  }\n\n  ngAfterContentInit() {\n    this.tabs.forEach((tab) => {\n      if (tab.active) {\n        this.selectTab(tab);\n        this.ifTabSelected = true;\n      }\n    });\n    if (!this.ifTabSelected) {\n      this.selectTab(this.tabs[0]);\n    }\n  }\n}\n","<ul class=\"tabs__tab-bar\">\n  <li\n    class=\"tabs__tab\"\n    *ngFor=\"let tab of tabs\"\n    [ngClass]=\"{'active': tab.active == true}\"\n  >\n    <a\n      tabindex=\"0\"\n      (keyup.enter)=\"selectTab(tab)\"\n      (keyup.space)=\"selectTab(tab)\"\n      (click)=\"selectTab(tab)\"\n      role=\"button\"\n      >{{ tab.tabTitle }}</a\n    >\n  </li>\n</ul>\n<ng-content></ng-content>\n\n<div class=\"overlay\" [style.display]=\"disabled ? 'block' : 'none'\"></div>\n","export * from './checkbox.component';\nexport * from './radio.component';\n","import { Directive, HostBinding } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[swap-control],[swap-control]',\n})\nexport class ControlDirective {\n  @HostBinding('attr.placeholder')\n  readonly placeholderSpace = ' ';\n\n  constructor(public ngControl: NgControl) {}\n}\n","export * from './checkbox-group.directive';\nexport * from './control.directive';\nexport * from './currency-mask.directive';\nexport * from './mask.directive';\n","export * from './checkbox.container';\n","export * from './nav-focus.directive';\n","export * from './checkbox';\nexport * from './radio';\nexport * from './select';\nexport * from './slider';\nexport * from './textfield';\n","import { InputBase } from './../input-base';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'label[swap-slider]',\n  templateUrl: '../template.html',\n})\nexport class SliderComponent extends InputBase {}\n","<ng-content select=\"[swap-control],[swap-control]\"></ng-content>\n<ng-content select=\"span\"></ng-content>\n<ng-container *ngIf=\"showError\">\n  <ng-content select=\"output\"></ng-content>\n</ng-container>\n","export * from './button.component';\n","import { Component, HostBinding, HostListener, Input } from '@angular/core';\nimport { Highlightable } from '@angular/cdk/a11y';\nimport { SelectService } from './select.service';\nimport { Option, Select } from './interfaces';\n\n@Component({\n  selector: 'swap-option',\n  template: `{{ value }}`,\n})\nexport class OptionComponent implements Option, Highlightable {\n  @Input()\n  public key!: string;\n\n  @Input()\n  public value!: string;\n\n  @HostBinding('class.selected')\n  public get selected(): boolean {\n    return this.select.selectedOption === this;\n  }\n\n  @HostBinding('class.active')\n  public active = false;\n\n  private _select: Select;\n\n  public get select(): Select {\n    return this._select;\n  }\n\n  public set select(value: Select) {\n    this._select = value;\n  }\n\n  constructor(private dropdownService: SelectService) {\n    this._select = this.dropdownService.getSelect();\n  }\n\n  public getLabel(): string {\n    return this.value;\n  }\n\n  public setActiveStyles(): void {\n    this.active = true;\n  }\n\n  public setInactiveStyles(): void {\n    this.active = false;\n  }\n\n  @HostListener('click', ['$event'])\n  public onClick(event: UIEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.select.selectOption(this);\n  }\n}\n","export * from './slider.container';\n","export * from './textfield.component';\n","export * from './option.component';\nexport * from './select-panel.component';\nexport * from './select.component';\nexport * from './select.service';\n","import { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabsContainer, TabComponent } from './components';\nimport { NavFocusDirective } from './directives';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [TabsContainer, TabComponent, NavFocusDirective],\n  exports: [TabsContainer, TabComponent, NavFocusDirective],\n})\nexport class SwapLayoutModule {}\n","export * from './form-footer';\nexport * from './header-nav';\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { Component, HostListener, Input, ViewChild } from '@angular/core';\nimport { CdkPortal } from '@angular/cdk/portal';\n\n@Component({\n  selector: 'swap-select-panel',\n  template: `\n    <ng-template cdk-portal>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n})\nexport class SelectPanelComponent {\n  @Input()\n  public reference!: HTMLElement;\n\n  @ViewChild(CdkPortal)\n  public contentTemplate!: CdkPortal;\n\n  protected overlayRef!: OverlayRef;\n\n  private _showing: boolean = false;\n  public get showing(): boolean {\n    return this._showing;\n  }\n  public set showing(value: boolean) {\n    this._showing = value;\n  }\n\n  constructor(protected overlay: Overlay) {}\n\n  public show() {\n    this.overlayRef = this.overlay.create(this.getOverlayConfig());\n    this.overlayRef.attach(this.contentTemplate);\n    this.syncWidth();\n    this.overlayRef.backdropClick().subscribe(() => this.hide());\n    this.showing = true;\n  }\n\n  public hide() {\n    this.overlayRef.detach();\n    this.showing = false;\n  }\n\n  @HostListener('window:resize')\n  public onWinResize() {\n    this.syncWidth();\n  }\n\n  protected getOverlayConfig(): OverlayConfig {\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(this.reference)\n      .withPush(false)\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top',\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom',\n        },\n      ]);\n\n    const scrollStrategy = this.overlay.scrollStrategies.reposition();\n\n    return new OverlayConfig({\n      positionStrategy: positionStrategy,\n      scrollStrategy: scrollStrategy,\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n    });\n  }\n\n  private syncWidth() {\n    if (!this.overlayRef) {\n      return;\n    }\n\n    const refRect = this.reference?.getBoundingClientRect();\n    this.overlayRef.updateSize({ width: refRect.width });\n  }\n}\n","export * from './textfield.container';\n","import { SelectPanelComponent } from './select-panel.component';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { Select } from './interfaces/select.interface';\nimport { OptionComponent } from './option.component';\nimport { SelectService } from './select.service';\nimport { NG_VALUE_ACCESSOR, SelectControlValueAccessor } from '@angular/forms';\nimport {\n  Input,\n  ViewChild,\n  Component,\n  ElementRef,\n  QueryList,\n  forwardRef,\n  ContentChildren,\n  AfterContentInit,\n  ChangeDetectorRef,\n  Renderer2,\n} from '@angular/core';\n\nconst SelectProvider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'swap-select',\n  templateUrl: './select.component.html',\n  providers: [SelectService, SelectProvider],\n})\nexport class SelectComponent\n  extends SelectControlValueAccessor\n  implements Select, AfterContentInit {\n  @Input()\n  public label = '';\n\n  @Input()\n  public placeholder = '';\n\n  @Input()\n  public selected = '';\n\n  @Input()\n  public required = false;\n\n  @Input()\n  public disabled = false;\n\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  @ViewChild(SelectPanelComponent)\n  public panel!: SelectPanelComponent;\n\n  @ContentChildren(OptionComponent)\n  public options!: QueryList<OptionComponent>;\n\n  public selectedOption!: OptionComponent;\n\n  private _displayText: string = '';\n  public get displayText(): string {\n    return this._displayText;\n  }\n  public set displayText(value: string) {\n    this._displayText = value;\n  }\n\n  public onChangeFn = (_: any) => {};\n\n  public onTouchedFn = () => {};\n\n  private _keyManager!: ActiveDescendantKeyManager<OptionComponent>;\n\n  public get keyManager(): ActiveDescendantKeyManager<OptionComponent> {\n    return this._keyManager;\n  }\n  public set keyManager(value: ActiveDescendantKeyManager<OptionComponent>) {\n    this._keyManager = value;\n  }\n\n  constructor(\n    readonly panelService: SelectService,\n    private _changeDetectorRef: ChangeDetectorRef,\n    readonly renderer: Renderer2,\n    readonly element: ElementRef<HTMLElement>\n  ) {\n    super(renderer, element);\n    this.panelService.register(this);\n    this.keyManager = this.getKeyManager();\n  }\n\n  public ngAfterContentInit() {\n    this.selectedOption = this.options\n      .toArray()\n      .find((option) => option.key === this.selected) as OptionComponent;\n\n    this.displayText = this.selectedOption ? this.selectedOption.value : '';\n    this.keyManager = this.getKeyManager();\n  }\n\n  getKeyManager() {\n    return new ActiveDescendantKeyManager(this.options)\n      .withHorizontalOrientation('ltr')\n      .withVerticalOrientation()\n      .withWrap();\n  }\n  public showPanel() {\n    this.panel.show();\n\n    if (!this.options.length) {\n      return;\n    }\n\n    this.selected\n      ? this.keyManager.setActiveItem(this.selectedOption)\n      : this.keyManager.setFirstItemActive();\n  }\n\n  public hidePanel() {\n    this.panel.hide();\n  }\n\n  public onPanelMenuIconClick(event: UIEvent): void {\n    this.input.nativeElement.focus();\n    this.input.nativeElement.click();\n    this._changeDetectorRef.detectChanges();\n  }\n\n  public onKeyDown(event: KeyboardEvent): void {\n    let KEYS = ['Enter', ' ', 'ArrowDown', 'Down', 'ArrowUp', 'Up'];\n\n    if (KEYS.indexOf(event.key) > -1) {\n      if (!this.panel.showing) {\n        return this.showPanel();\n      }\n\n      if (!this.options.length) {\n        return event.preventDefault();\n      }\n    }\n\n    KEYS = [\n      'Up',\n      'ArrowUp',\n      'Down',\n      'ArrowDown',\n      'ArrowRight',\n      'Right',\n      'ArrowLeft',\n      'Left',\n    ];\n\n    if (event.key === 'Enter' || event.key === ' ') {\n      this.selectedOption = this.keyManager.activeItem as OptionComponent;\n      this.selected = this.selectedOption.key;\n      this.displayText = this.selectedOption ? this.selectedOption.value : '';\n\n      this.hidePanel();\n      // this.onChange()\n\n      event.preventDefault();\n    } else if (event.key === 'Escape' || event.key === 'Esc') {\n      if (this.panel.showing) {\n        this.hidePanel();\n      }\n    } else if (KEYS.indexOf(event.key) > -1) {\n      this.keyManager.onKeydown(event);\n    } else if (\n      event.key === 'PageUp' ||\n      event.key === 'PageDown' ||\n      event.key === 'Tab'\n    ) {\n      this.panel.showing && event.preventDefault();\n    }\n  }\n\n  public selectOption(option: OptionComponent) {\n    this.keyManager.setActiveItem(option);\n\n    this.selected = option.key;\n    this.selectedOption = option;\n    this.displayText = this.selectedOption ? this.selectedOption.value : '';\n\n    this.hidePanel();\n    this.input.nativeElement.focus();\n    // this.onChange()\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onChangeFn = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onTouchedFn = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  public writeValue(obj: any): void {\n    this.selected = obj;\n  }\n\n  // public onTouched() {\n  //   this.onTouchedFn()\n  // }\n\n  // public onChange() {\n  //   this.onChangeFn(this.selected)\n  // }\n}\n","<div class=\"input\" [class.required]=\"required\" #panelRef>\n  <label class=\"label-text\">{{ label }}</label>\n  <input\n    #input\n    readonly\n    [placeholder]=\"placeholder\"\n    [disabled]=\"disabled\"\n    [value]=\"displayText\"\n    (click)=\"showPanel()\"\n    (keydown)=\"onKeyDown($event)\"\n    (blur)=\"onTouched()\"\n    autocomplete=\"off\"\n  />\n  <span class=\"panel-arrow\" (click)=\"onPanelMenuIconClick($event)\">\n    <ng-container *ngIf=\"!panel?.showing; else arrowDown\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n        <path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\" />\n      </svg>\n    </ng-container>\n\n    <ng-template #arrowDown>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\" />\n      </svg>\n    </ng-template>\n  </span>\n  <swap-select-panel [reference]=\"panelRef\" #panelComp>\n    <div class=\"swap-options-container\">\n      <ng-content select=\"swap-option\"></ng-content>\n    </div>\n  </swap-select-panel>\n</div>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { InputBase } from './../input-base';\n\n@Component({\n  selector: 'label[swap-checkbox]',\n  templateUrl: '../template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckboxComponent extends InputBase {}\n","import { Injectable } from '@angular/core';\nimport { SelectComponent } from './select.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectService {\n  private select!: SelectComponent;\n\n  public register(select: SelectComponent) {\n    this.select = select;\n  }\n\n  public getSelect(): SelectComponent {\n    return this.select;\n  }\n}\n","export * from './tab.component';\nexport * from './tabs.container';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export * from './lib/swap-layout.module';\nexport * from './lib/components';\nexport * from './lib/directives';\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { SwapLayoutModule } from '@swap/layout';\nimport { SwapFormsModule } from '@swap/forms';\n\nimport { AppComponent } from './app.component';\nimport { FormFooterComponent, HeaderNavComponent } from './components';\nimport { NavigationService } from './shared';\nimport {\n  TextfieldContainer,\n  CheckboxContainer,\n  RadioContainer,\n  SliderContainer,\n  SelectContainer,\n} from './containers';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'textfield', pathMatch: 'full' },\n  { path: 'textfield', component: TextfieldContainer },\n  { path: 'checkbox', component: CheckboxContainer },\n  { path: 'radio', component: RadioContainer },\n  { path: 'slider', component: SliderContainer },\n  { path: 'select', component: SelectContainer },\n  {\n    path: 'auth',\n    loadChildren: () =>\n      import('./modules/auth/auth.module').then((m) => m.AuthModule),\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormFooterComponent,\n    TextfieldContainer,\n    CheckboxContainer,\n    RadioContainer,\n    SliderContainer,\n    HeaderNavComponent,\n    SelectContainer,\n  ],\n  imports: [\n    BrowserModule,\n    SwapFormsModule,\n    SwapLayoutModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes),\n  ],\n  providers: [NavigationService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\n\nexport function maskFormatValidator(masks: string | string[]) {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (!control.value) {\n      return null;\n    }\n\n    if (Array.isArray(masks)) {\n      if (\n        !(masks as string[]).find(\n          (mask) => mask.length === control.value.length\n        )\n      ) {\n        return { invalidLength: true };\n      }\n    } else {\n      if (control.value.length !== masks.length) {\n        return { invalidLength: true };\n      }\n    }\n\n    return null;\n  };\n}\n","import { NavigationItem } from './navigation-item';\nimport { BehaviorSubject } from 'rxjs';\n\nexport class Navigation {\n  private _items = new BehaviorSubject<NavigationItem[]>([]);\n  public items$ = this._items.asObservable();\n\n  constructor(\n    public id: string | number,\n    public items: NavigationItem[] = []\n  ) {}\n\n  addItem(item: NavigationItem) {\n    const items = this._items.getValue();\n    this._items.next([...items, item]);\n  }\n\n  setItems(items: NavigationItem[]) {\n    this._items.next(items);\n  }\n}\n","import { Input, Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'footer[swap-form]',\n  templateUrl: './form-footer.component.html',\n  styleUrls: ['./form-footer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormFooterComponent {\n  @Input('swap-form')\n  public swapForm = '';\n}\n","<button swap-button mode=\"secondary\" [attr.form]=\"swapForm\" type=\"reset\">\n  Limpar\n</button>\n<button swap-button mode=\"primary\" [attr.form]=\"swapForm\">Enviar</button>\n","import { NavigationItem } from './navigation-item';\nimport { Injectable } from '@angular/core';\nimport { Navigation } from './navigation';\n\nlet NEXT_ID: number = 0;\n\n@Injectable()\nexport class NavigationService {\n  navigations = new Map<string | number, Navigation>();\n\n  register(nav: Navigation | NavigationItem[]) {\n    if (nav instanceof Navigation) {\n      if (this.navigations.has(nav.id)) {\n        throw new Error(`Navigation ${nav.id} in use`);\n      }\n      this.navigations.set(nav.id, nav);\n    } else {\n      const navigation = new Navigation(NEXT_ID++, nav);\n      this.navigations.set(navigation.id, navigation);\n    }\n  }\n\n  get(id: string | number) {\n    return this.navigations.get(id);\n  }\n}\n","import { TabsContainer } from './tabs.container';\nimport {\n  Input,\n  Component,\n  HostBinding,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'swap-tab',\n  template: `\n    <div class=\"tabs__panel\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./tab.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabComponent {\n  @Input() active: boolean = false;\n  @Input() tabTitle: string = '';\n\n  @HostBinding('attr.aria-hidden')\n  get hidden() {\n    return !this.active;\n  }\n\n  constructor(tabs: TabsContainer) {\n    tabs.addTab(this);\n  }\n\n  getTabTitle() {\n    return this.tabTitle;\n  }\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  TextfieldComponent,\n  CheckboxComponent,\n  RadioComponent,\n  SliderComponent,\n  ButtonComponent,\n  SelectComponent,\n  OptionComponent,\n  SelectPanelComponent,\n} from './components';\nimport {\n  MaskDirective,\n  CurrencyMaskDirective,\n  ControlDirective,\n  CheckboxGroupDirective,\n} from './directives';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, PortalModule],\n  declarations: [\n    TextfieldComponent,\n    ControlDirective,\n    MaskDirective,\n    CurrencyMaskDirective,\n    CheckboxComponent,\n    RadioComponent,\n    SliderComponent,\n    ButtonComponent,\n    SelectComponent,\n    SelectPanelComponent,\n    OptionComponent,\n    CheckboxGroupDirective,\n  ],\n  exports: [\n    TextfieldComponent,\n    ControlDirective,\n    MaskDirective,\n    CurrencyMaskDirective,\n    CheckboxComponent,\n    RadioComponent,\n    SliderComponent,\n    ButtonComponent,\n    SelectComponent,\n    SelectPanelComponent,\n    OptionComponent,\n    CheckboxGroupDirective,\n  ],\n})\nexport class SwapFormsModule {}\n","export * from './header-nav.component';\n","export * from './select.container';\n","import { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  templateUrl: './checkbox.container.html',\n  // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckboxContainer {\n  form = this.fb.group({\n    one: [true, [Validators.requiredTrue]],\n    two: [false, [Validators.requiredTrue]],\n    group: this.fb.group({\n      c1: [true],\n      c2: [false],\n      c3: [true],\n      c4: [false],\n      c5: [true],\n      c6: [false],\n    }),\n  });\n\n  constructor(readonly fb: FormBuilder) {}\n\n  getState(group: FormGroup) {\n    const values = Object.values(group.controls);\n    const some = values.some((control) => control.value);\n    const all = values.every((control) => control.value);\n    return all ? all : some ? null : !!some;\n  }\n\n  toggleGroup(checked: boolean, group: FormGroup) {\n    Object.values(group.controls).map((c) => c.setValue(checked));\n  }\n}\n","<form id=\"swap\" [formGroup]=\"form\">\n  <fieldset formGroupName=\"group\">\n    <legend>Group</legend>\n\n    <label class=\"swap-checkbox\">\n      <input\n        type=\"checkbox\"\n        aria-controls=\"label1 label2 label3 label4 label5 label6\"\n        swap-checkbox-group\n      />\n      <span>Controlador</span>\n    </label>\n\n    <hr />\n\n    <label swap-checkbox class=\"ml-12px\">\n      <span>Label 1</span>\n      <input type=\"checkbox\" id=\"label1\" swap-control formControlName=\"c1\" />\n    </label>\n    <label swap-checkbox class=\"ml-12px\">\n      <span>Label 2</span>\n      <input type=\"checkbox\" id=\"label2\" swap-control formControlName=\"c2\" />\n    </label>\n    <label swap-checkbox class=\"ml-12px\">\n      <span>Label 3</span>\n      <input type=\"checkbox\" id=\"label3\" swap-control formControlName=\"c3\" />\n    </label>\n    <label swap-checkbox class=\"ml-12px\">\n      <span>Label 4</span>\n      <input type=\"checkbox\" id=\"label4\" swap-control formControlName=\"c4\" />\n    </label>\n    <label swap-checkbox class=\"ml-12px\">\n      <span>Label 5</span>\n      <input type=\"checkbox\" id=\"label5\" swap-control formControlName=\"c5\" />\n    </label>\n    <label swap-checkbox class=\"ml-12px\">\n      <span>Label 6</span>\n      <input type=\"checkbox\" id=\"label6\" swap-control formControlName=\"c6\" />\n    </label>\n  </fieldset>\n</form>\n\n<footer swap-form=\"swap\"></footer>\n","import { FormBuilder, Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './textfield.container.html',\n})\nexport class TextfieldContainer {\n  form = this.fb.group({\n    filled: ['', [Validators.required]],\n    outlined: ['', [Validators.required]],\n    standard: ['', [Validators.required]],\n    cpf: ['', [Validators.required]],\n    phone: ['', [Validators.minLength(15)]],\n    price: ['', [Validators.min(0.01)]],\n  });\n\n  constructor(readonly fb: FormBuilder) {}\n}\n","<form id=\"swap\" [formGroup]=\"form\">\n  <swap-tabs #tabs=\"swapTabs\">\n    <swap-tab tabTitle=\"Tab 1\">\n      <label swap-textfield standard>\n        <span>CPF</span>\n        <input\n          type=\"text\"\n          swap-control\n          formControlName=\"cpf\"\n          swap-mask=\"DDD.DDD.DDD-DD\"\n        />\n        <output>Error</output>\n      </label>\n    </swap-tab>\n    <swap-tab tabTitle=\"Tab 2\" [active]=\"true\">\n      <label swap-textfield filled>\n        <span>Preço</span>\n        <input type=\"text\" swap-control formControlName=\"price\" swap-currency />\n        <output>Error</output>\n      </label>\n    </swap-tab>\n    <swap-tab tabTitle=\"Tab 3\">\n      <label swap-textfield outlined>\n        <span>Telefone</span>\n        <input\n          type=\"text\"\n          swap-control\n          formControlName=\"phone\"\n          swap-mask=\"(DD) DDDDD-DDDD\"\n        />\n        <output>Error</output>\n      </label>\n    </swap-tab>\n  </swap-tabs>\n</form>\n\n<footer swap-form=\"swap\"></footer>\n\n<pre>{{ form.value | json }}</pre>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './select.container.html',\n})\nexport class SelectContainer implements OnInit {\n  options: { value: number; label: string }[] = [\n    { value: 1, label: 'Paris' },\n    { value: 2, label: 'Brasil' },\n    { value: 3, label: 'Singapore' },\n    { value: 4, label: 'Malaysia' },\n    { value: 5, label: 'Goa' },\n    { value: 6, label: 'Thailand' },\n  ];\n\n  form = this.fb.group({\n    control: ['', []],\n    populated: ['', []],\n    required: ['', [Validators.required]],\n  });\n\n  constructor(readonly fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form.get('populated').patchValue({ value: 6, label: 'Thailand' });\n  }\n}\n","<form id=\"form\" [formGroup]=\"form\">\n  <swap-select formControlName=\"required\" placeholder=\"- Selecione -\">\n    <swap-option\n      *ngFor=\"let item of options\"\n      [key]=\"item.value\"\n      [value]=\"item.label\"\n    >\n    </swap-option>\n  </swap-select>\n</form>\n\n<footer swap-form></footer>\n","export * from './form-footer.component';\n","import { FormGroup, FormGroupName } from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport {\n  OnInit,\n  OnDestroy,\n  Directive,\n  Renderer2,\n  ElementRef,\n  HostListener,\n} from '@angular/core';\n\n@Directive({\n  selector: 'input[swap-checkbox-group]',\n})\nexport class CheckboxGroupDirective implements OnInit, OnDestroy {\n  /**\n   * Usado para manter o observable ativo\n   * enquanto temos ciclo de vida do componente\n   *\n   * @private\n   */\n  private destroy = new Subject<void>();\n\n\n  /**\n   * Usado para manter o último estado misto\n   * em memória para retorno posterior\n   *\n   * @private\n   * @type {Record<string, boolean>}\n   */\n  private lastState: Record<string, boolean> = null;\n\n  constructor(\n    private element: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    private container: FormGroupName\n  ) {}\n\n  /**\n   * Checkboxes controlados\n   *\n   * A partir de alterações individuais nos checkboxes\n   * alteramos o estado do controlador para quando:\n   *\n   * - Todos marcados: marcado\n   * - Todos desmarcados: desmarcado\n   * - Partialmente marcados: indeterminado / Misto\n   */\n  ngOnInit(): void {\n    if (this.container?.control) {\n      this.container.valueChanges\n        .pipe(takeUntil(this.destroy))\n        .subscribe((value: Record<string, boolean>) => {\n          const checked = this.getState(value);\n          this.updateProperty('checked', checked || false);\n          this.updateProperty('indeterminate', checked === null);\n        });\n    }\n  }\n\n  /**\n   * Checkbox controlador\n   *\n   * Escutando alterações do checkbox controlador\n   * é possível manter em memória o estado inicial dos\n   * checkboxes controlados para alternar entre os estados\n   * marcados / desmarcados, então retornar ao estado inicial.\n   */\n  @HostListener('change', ['$event.target'])\n  onChange({ checked }: HTMLInputElement) {\n    this.updateProperty('indeterminate', false);\n\n    if (this.container?.control) {\n      if (!this.lastState && checked) {\n        this.lastState = this.container.value;\n        this.toggleGroup(this.container.control, checked);\n      } else {\n        if (this.lastState && !checked) {\n          this.toggleGroup(this.container.control, checked);\n        } else {\n          this.container.control.patchValue(this.lastState);\n          this.lastState = null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Percorre checkboxes alterando seus estados\n   *\n   * @param {FormGroup} group\n   * @param {boolean} checked\n   */\n  toggleGroup(group: FormGroup, checked: boolean) {\n    Object.values(group.controls).map((c) => c.setValue(checked));\n  }\n\n  /**\n   * Analisa checkboxes para determinar se todos\n   * estão marcados, desmarcados ou misto, retornando:\n   *\n   * - Todos marcados: true\n   * - Todos desmarcados: false\n   * - Misto: null\n   *\n   * @param {Record<string, boolean>} value\n   */\n  getState(value: Record<string, boolean>) {\n    const values = Object.values(value);\n    const some = values.some((value) => value);\n    const all = values.every((value) => value);\n    return all ? all : some ? null : !!some;\n  }\n\n  /**\n   * Altera o atributo do elemento no dom\n   *\n   * @private\n   * @param {('checked' | 'indeterminate')} property\n   * @param {boolean} value\n   */\n  private updateProperty(\n    property: 'checked' | 'indeterminate',\n    value: boolean\n  ) {\n    this.renderer.setProperty(this.element.nativeElement, property, value);\n  }\n\n  /**\n   * Completa o subject e finaliza o observable\n   */\n  ngOnDestroy(): void {\n    this.destroy.next();\n    this.destroy.complete();\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { Navigation, NavigationService } from './shared';\n\n@Component({\n  selector: 'swap-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  title = 'app';\n\n  nav: Navigation;\n\n  @ViewChild('main')\n  main: ElementRef<HTMLElement>;\n\n  constructor(private _navigation: NavigationService) {\n    const nav = new Navigation('nav', []);\n    this._navigation.register(nav);\n    this.nav = nav;\n  }\n\n  ngAfterViewInit(): void {\n    console.log(this.main);\n  }\n\n  ngOnInit(): void {\n    this.nav.setItems([\n      { route: '/auth', label: 'Auth' },\n      { route: '/textfield', label: 'Textfield' },\n      { route: '/slider', label: 'Slider' },\n      { route: '/select', label: 'Select' },\n      {\n        route: '/',\n        label: 'Selection',\n        children: [\n          { route: 'radio', label: 'Radio' },\n          { route: 'checkbox', label: 'Checkbox' },\n        ],\n      },\n    ]);\n  }\n}\n","<nav swap-header>\n  <img alt=\"Nx logo\" width=\"75\" src=\"/assets/swap-elements.svg\" />\n  <h1>Welcome to {{ title }}!</h1>\n</nav>\n<main #main swap-nav-focus [main-header]=\"main\">\n  <router-outlet></router-outlet>\n</main>\n","import {\n  Input,\n  Component,\n  HostBinding,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nexport type StyleMode = 'primary' | 'secondary';\n\n@Component({\n  selector: 'button[swap-button]',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonComponent {\n  private _mode: StyleMode = 'primary';\n\n  @Input()\n  @HostBinding('attr.mode')\n  get mode(): StyleMode {\n    return this._mode;\n  }\n\n  set mode(style: StyleMode) {\n    this._mode = style;\n  }\n}\n","export * from './navigation-item';\nexport * from './navigation.service';\nexport * from './navigation';\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { InputBase } from './../input-base';\n\n@Component({\n  selector: 'label[swap-radio]',\n  templateUrl: '../template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RadioComponent extends InputBase {}\n","import { ControlDirective } from '../directives';\nimport { ContentChild, Directive } from '@angular/core';\n\n@Directive()\nexport class InputBase {\n  @ContentChild(ControlDirective) public input: ControlDirective;\n\n  // prettier-ignore\n  get showError() {\n    return this.input.ngControl.invalid\n        && this.input.ngControl.touched;\n  }\n}\n","import { NavigationService, Navigation, NavigationItem } from './../../shared';\nimport {\n  Input,\n  Component,\n  HostBinding,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'nav[swap-header]',\n  templateUrl: './header-nav.component.html',\n  styleUrls: ['./header-nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderNavComponent {\n  @Input('swap-header')\n  public header = '';\n\n  @HostBinding('attr.role')\n  role = 'navigation';\n\n  readonly nav: Navigation;\n  constructor(readonly navigation: NavigationService) {\n    this.nav = this.navigation.get('nav');\n  }\n\n  toggle(item: NavigationItem) {\n    item.expanded = !item.expanded;\n  }\n}\n","<section>\n  <ng-content select=\"img\"></ng-content>\n  <ng-content select=\"h1\"></ng-content>\n</section>\n<ul>\n  <ng-container *ngIf=\"nav.items$ | async as list\">\n    <li *ngFor=\"let item of list\" [class]=\"{ dropdown: item.children?.length }\">\n      <ng-container *ngIf=\"item.children?.length; else link\">\n        <button\n          type=\"button\"\n          class=\"dropdown__title\"\n          [attr.aria-expanded]=\"item.expanded\"\n          [attr.aria-controls]=\"item.id\"\n          (mouseover)=\"toggle(item)\"\n          (mouseout)=\"toggle(item)\"\n        >\n          {{ item.label }}\n        </button>\n      </ng-container>\n      <ng-template #link>\n        <a [routerLink]=\"item.route\">{{ item.label }}</a>\n      </ng-template>\n\n      <ul class=\"dropdown__menu\" [id]=\"item.id\">\n        <li *ngFor=\"let child of item.children\">\n          <a [routerLink]=\"child.route\">{{ child.label }}</a>\n        </li>\n      </ul>\n    </li>\n  </ng-container>\n</ul>\n","export * from './slider.component';\n","import { InputBase } from './../input-base';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'label[swap-textfield]',\n  templateUrl: '../template.html',\n})\nexport class TextfieldComponent extends InputBase {}\n","export * from './button';\nexport * from './select';\nexport * from './selection';\nexport * from './slider';\nexport * from './textfield';\nexport * from './input-base';\n","import { startWith, takeUntil, filter, tap, map } from 'rxjs/operators';\nimport { AbstractControl, NgControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport {\n  AfterViewInit,\n  ElementRef,\n  Directive,\n  OnDestroy,\n  Optional,\n  Input,\n  Self,\n} from '@angular/core';\nimport {\n  maskedNumericValueFor,\n  unmaskedNumericValueFor,\n  hasNonDecimalCharacters,\n} from './utilities/mask';\nimport {\n  nextCursorPositionFor,\n  setCursorPositionFor,\n  cursorPositionFor,\n} from './utilities/cursor';\n\n@Directive({ selector: 'input[swap-currency]' })\nexport class CurrencyMaskDirective implements OnDestroy, AfterViewInit {\n  private _destroy = new Subject();\n  /**\n   * pode ser inferido com `formControlName` ou` [ngControl]`.\n   * O primeiro é necessário se declarado em um wrapper em\n   * vez de um `<input />` el.\n   */\n  @Input() ngControl!: AbstractControl;\n\n  @Input() prefix = 'R$';\n  @Input() thousandsSeparator = '.';\n  @Input() decimalSeparator = ',';\n  @Input() digitsAfterSeparator = 2;\n  @Input() maxIntegerDigits = 8;\n  @Input() allowNegatives = false;\n\n  /**\n   * Para quando o formulário já tem um valor inicial\n   * ou espera-se que inicialize como `zero * mascarado *`.\n   */\n  @Input() validateOnInit = true;\n\n  private valueHasChanged = false;\n  private previousValue!: string;\n  private control!: AbstractControl;\n  private nativeEl: any;\n\n  constructor(\n    @Optional() @Self() private selfNgControl: NgControl,\n    private elRef: ElementRef\n  ) {\n    if (this.selfNgControl?.control) {\n      this.ngControl = this.selfNgControl?.control;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.control = this.selfNgControl?.control ?? this.ngControl;\n    if (!this.control) {\n      console.warn(`\n        currencyMask: Um FormControl é necessário\n        para que a diretiva seja iniciada.\n      `);\n      return;\n    }\n    const element = this.elRef.nativeElement;\n    this.nativeEl = element.hasChildNodes()\n      ? element.getElementsByTagName('input')[0]\n      : element;\n    if (!this.nativeEl) {\n      console.warn(`\n        currencyMask: um elRef do tipo input é\n        necessário para que a diretiva seja iniciada.\n      `);\n      return;\n    }\n\n    const boot = this.validateOnInit\n      ? startWith(this.control.value as string)\n      : tap(() => {});\n\n    this.control.valueChanges\n      .pipe(\n        filter((value: string | number) => {\n          const lastValueWasChanged = this.valueHasChanged;\n          this.valueHasChanged = false;\n\n          return (\n            !this.previousValue ||\n            unmaskedNumericValueFor(value) !==\n              unmaskedNumericValueFor(this.previousValue) ||\n            hasNonDecimalCharacters(value) ||\n            !lastValueWasChanged\n          );\n        }),\n        map((value: string | number) => value?.toString() ?? ''),\n        takeUntil(this._destroy)\n      )\n      .subscribe((value: string) => {\n        this.adjustCursorIfSeparator(value);\n        this.setValue(\n          this.maskedValueFor(value),\n          value.length < this.previousValue?.length\n        );\n      });\n  }\n\n  private setValue(nextValue: string, removing = false) {\n    let nextCursorPosition = cursorPositionFor(this.nativeEl);\n\n    if (nextValue) {\n      nextCursorPosition =\n        nextCursorPosition <= this.prefix.length + 1\n          ? nextValue.length\n          : nextCursorPositionFor(\n              this.nativeEl,\n              this.previousValue,\n              nextValue,\n              true,\n              true,\n              removing\n            );\n    }\n\n    const wasInitialValue = this.valueHasChanged;\n\n    this.valueHasChanged = !!this.previousValue;\n    this.previousValue = nextValue;\n\n    this.control.setValue(nextValue, { emitEvent: false });\n    this.control.setValue(unmaskedNumericValueFor(nextValue), {\n      emitEvent: true,\n      emitModelToViewChange: false,\n    });\n\n    if (wasInitialValue) {\n      nextCursorPosition = nextValue.length + 1;\n    }\n\n    setCursorPositionFor(this.nativeEl, nextCursorPosition);\n  }\n\n  private maskedValueFor(value: string): string {\n    return maskedNumericValueFor(\n      value,\n      this.thousandsSeparator,\n      this.decimalSeparator,\n      this.prefix,\n      this.digitsAfterSeparator,\n      this.maxIntegerDigits,\n      this.allowNegatives\n    );\n  }\n\n  private adjustCursorIfSeparator(value: string) {\n    const decimalSeparatorPressed =\n      value.indexOf(this.decimalSeparator) !==\n      value.lastIndexOf(this.decimalSeparator);\n\n    if (decimalSeparatorPressed) {\n      const curPos = cursorPositionFor(this.elRef);\n      const nextPos =\n        curPos - 1 <= value.indexOf(this.decimalSeparator)\n          ? value.length\n          : value.indexOf(this.decimalSeparator) + 1;\n\n      setCursorPositionFor(this.elRef, nextPos);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n    this._destroy.unsubscribe();\n  }\n}\n","export * from './radio.container';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}