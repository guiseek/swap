{"version":3,"sources":["./apps/app/src/app/modules/auth/auth.component.ts","./apps/app/src/app/modules/auth/auth.component.html","./apps/app/src/app/modules/auth/auth.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAEP;;;;;;;;;AAO3C,MAAM,aAAa;IAMxB,YAAoB,EAAe,EAAU,IAAgB;QAAzC,OAAE,GAAF,EAAE,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAL7D,SAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/D,CAAC,CAAC;IAE6D,CAAC;IAEjE,QAAQ,KAAU,CAAC;IAEnB,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,IAAI;iBACN,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;iBACxC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;SACnD;IACH,CAAC;;0EAjBU,aAAa;6FAAb,aAAa;QCT1B,4EAAW;QACT,8EAA2B;QACzB,0EAAiD;QAAxB,yIAAY,cAAU,IAAC;QAC9C,2EAA6B;QAC3B,uEAAM;QAAA,uEAAO;QAAA,4DAAO;QACpB,sEAKE;QACJ,4DAAQ;QACR,2EAA6B;QAC3B,uEAAM;QAAA,gEAAK;QAAA,4DAAO;QAClB,uEAKE;QACJ,4DAAQ;QACR,0EAAgC;QAC9B,6EAAkD;QAAA,kEAAM;QAAA,4DAAS;QACjE,6EAAiD;QAAA,kEAAM;QAAA,4DAAS;QAClE,4DAAM;QACR,4DAAO;QACT,4DAAW;QACX,+EAA8B;QAC5B,2EAAyB;QACvB,4EAA6B;QAC3B,wEAAM;QAAA,wEAAO;QAAA,4DAAO;QACpB,uEAKE;QACJ,4DAAQ;QACR,4EAA6B;QAC3B,wEAAM;QAAA,iEAAK;QAAA,4DAAO;QAClB,uEAKE;QACJ,4DAAQ;QACR,6EAAkD;QAAA,kEAAM;QAAA,4DAAS;QACjE,6EAAiD;QAAA,kEAAM;QAAA,4DAAS;QAClE,4DAAO;QACT,4DAAW;QACb,4DAAY;;QAjDF,0DAAkB;QAAlB,+EAAkB;QA0BlB,2DAAkB;QAAlB,+EAAkB;;;;;;;;;;;;;;AC5B5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAED;AACQ;AACN;AACI;AACP;;;AAE9C,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6DAAa,EAAE,CAAC,CAAC;AAYzD,MAAM,UAAU;;oEAAV,UAAU;yFAAV,UAAU;6FARZ;YACP,4DAAY;YACZ,2DAAe;YACf,6DAAgB;YAChB,kEAAmB;YACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;mIAEU,UAAU,mBATN,6DAAa,aAE1B,4DAAY;QACZ,2DAAe;QACf,6DAAgB;QAChB,kEAAmB","file":"modules-auth-auth-module.js","sourcesContent":["import { FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'swap-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthComponent implements OnInit {\n  form = this.fb.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n  });\n\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    console.log(this.form.value);\n    if (this.form.valid) {\n      this.http\n        .post('/api/auth/login', this.form.value)\n        .subscribe((response) => console.log(response));\n    }\n  }\n}\n","<swap-tabs>\n  <swap-tab tabTitle=\"Login\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <label swap-textfield filled>\n        <span>Usuário</span>\n        <input\n          swap-control\n          type=\"text\"\n          formControlName=\"username\"\n          autocomplete=\"username\"\n        />\n      </label>\n      <label swap-textfield filled>\n        <span>Senha</span>\n        <input\n          swap-control\n          type=\"password\"\n          formControlName=\"password\"\n          autocomplete=\"current-password\"\n        />\n      </label>\n      <div class=\"flex space-between\">\n        <button type=\"reset\" swap-button mode=\"secondary\">Limpar</button>\n        <button type=\"submit\" swap-button mode=\"primary\">Enviar</button>\n      </div>\n    </form>\n  </swap-tab>\n  <swap-tab tabTitle=\"Registro\">\n    <form [formGroup]=\"form\">\n      <label swap-textfield filled>\n        <span>Usuário</span>\n        <input\n          swap-control\n          type=\"text\"\n          formControlName=\"username\"\n          autocomplete=\"username\"\n        />\n      </label>\n      <label swap-textfield filled>\n        <span>Senha</span>\n        <input\n          swap-control\n          type=\"password\"\n          formControlName=\"password\"\n          autocomplete=\"current-password\"\n        />\n      </label>\n      <button type=\"reset\" swap-button mode=\"secondary\">Limpar</button>\n      <button type=\"submit\" swap-button mode=\"primary\">Enviar</button>\n    </form>\n  </swap-tab>\n</swap-tabs>\n","import { SwapLayoutModule } from '@swap/layout';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SwapFormsModule } from '@swap/forms';\n\nconst routes: Routes = [{ path: '', component: AuthComponent }];\n\n@NgModule({\n  declarations: [AuthComponent],\n  imports: [\n    CommonModule,\n    SwapFormsModule,\n    SwapLayoutModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n  ],\n})\nexport class AuthModule {}\n"],"sourceRoot":"webpack:///"}